# 内部 etcd 集群使用
apiVersion: v1
kind: Service
metadata:
  name: neting-etcd
spec:
  ports:
    - port: 2379
      name: client
    - port: 2380
      name: private
  selector:
    app: neting-etcd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: neting-etcd
  labels:
    app: neting-etcd
spec:
  serviceName: neting-etcd
  selector:
    matchLabels:
      app: neting-etcd
  replicas: 1
  template:
    metadata:
      name: neting-etcd
      labels:
        app: neting-etcd
    spec:
      containers:
        - name: neting-etcd
          image: quay.io/coreos/etcd:latest
          ports:
            - containerPort: 2379
              name: client
            - containerPort: 2380
              name: peer
          volumeMounts:
            - name: neting-etcd
              mountPath: /var/run/etcd
              # ,etcd-1=http://etcd-1.etcd:2380,etcd-2=http://etcd-2.etcd:2380
          command:
            - /bin/sh
            - -c
            - |
              PEERS="etcd-0=http://etcd-0.etcd:2380"
              exec etcd --name ${HOSTNAME} \
                --listen-peer-urls http://0.0.0.0:2380 \
                --listen-client-urls http://0.0.0.0:2379 \
                --advertise-client-urls http://${HOSTNAME}.etcd:2379 \
                --data-dir /var/run/etcd/default.etcd
  volumeClaimTemplates:
    - metadata:
        name: neting-etcd
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: neting-etcd
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  hostPath:
      # 宿主上目录位置，需要先提前创建
    path: /data/etcd
      # 此字段为可选
    type: Directory
